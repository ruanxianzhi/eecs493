Findings:
The most general problem occurred in our testings is UDP packets dropping when receiving messages from other computers. We observed this problem when developing the game, and we found it is complicated to fix that (probably by implementing a TCP network, which including applying sequence number to each request, sending back confirmation and resending etc.). So we tried to reduce the probability of dropping message by sending each request four times, and resending last request before sending a new one. We also added error handling when message dropping happens, which is making the person dropping message out of the round of game and the others continue. Even though we made effort on fixing this problem, it occurred for three times out of eight rounds of games, in 2-people group, 3-people group, and 4-people group, respectively. In the 2-people group, message dropping occurred when both player tried to roll out a “six” to get their planes out of home, and one player (named player A) clicked “roll” button immediately after the other one (named player B) clicked the “roll". Then it should be B’s turn to roll again, but he dropped the message stating A had rolled, so B could not roll any more and A had to play a 1-player game. We guess it’s because player A tried to send the message while player B was still sending remaining times of message, so messages blocked and B did’t receive A’s message. In the 4-people group, two players tried to choose yellow as their color at the same time. Both of their computers got themselves’s message and registered yellow as their color, but dropped the other’s message. The reason of dropping message is the same as in 2-people group. In the 3-people group, the problem occurred in a pretty normal condition, after one player rolled and chose a plane to go, the next player didn’t get the turn. We guess it’s because the latter player’s computer was not in good network connection at that moment, so it missed all the messages sending at that time.
The next problem is that it’s difficult to distinguish the lightest-yellow plane and second-lightest-yellow plane, and same to green planes. A player standing for yellow muddled the planes twice in a game, and another player muddled the green planes once. Similar problem occurs for enabled and disabled buttons. A player could not tell if the buttons were enabled when all the buttons were enabled or disabled. A fix for the two problems might be use more recognizable colors for different planes, and hide buttons when disabled.
Another problem occurs when a plane is near to the terminal, for example, three steps from the terminal. If a “four” is rolled out, the plane should first go to the terminal and back one step, but in our game the plane goes forward and stops at its destination instead of passing and backing. It’s confused to some of our testers because the plane seems to take two steps instead of four steps as it should be. We also observed this problem when developing. But when we tried to fix it, some other bugs were caused, so finally we chose to simplify the problem instead of debugging due to the limited time. A fix for this problem should be improve the algorithm while keeping other things go well.
The last problem we found is the memory problem. It occurs when the game has started for a long time and nobody wins, the game window has refreshed many times and finally the computer comes up a warning stating something like “You are almost run out of memory”. The problem occurred for four times when we developers tested the game, but we failed to find out what caused the problem specifically and how to fix that. Same things happened when the 4-people group didn’t finish the game for over 20 minutes, and one of their computers came up this warning.
All testers gave overall positive feedback. Most of them (9 out of 10) thought the chessboard and background color are pretty beautiful. Some of them (4 out of 10) thought the components in waiting room and buttons in the game window are in good layout.
 Flight chess is a traditional board game in China, and there are similar western game called Ludo and Indian game called Pachisi. Our team implemented the game following Chinese rules. Seven of our testers are Chinese, and all of them were happy that our game follows the rules strictly except the small bug occurs near terminal as stated before. One of the other three testers has played Ludo before, and the other two are completely new to the flight chess game. After carefully reading the rules all of the three testers did great jobs in the games and thought it an interesting game.
